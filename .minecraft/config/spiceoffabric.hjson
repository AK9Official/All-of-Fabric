{
	// Here can you enable the good ol' carrot style.
	// This means you start with a set amount of hearts and extend it by eating unique foods
	carrot: {
		// Enables the carrot style module.
		// default: false
		_enable: true
		// Sets the amount of hearts with which a new player spawns
		// default: 6
		// constraints:
		// Must be between 1 and 100.
		start-hearts: 4
		// Specifies an expression for how many foods a player needs to eat to earn the next heart.
		// The result resembles the absolute amount of unique food.
		// default: 2*pow(2, heartAmount - 6)
		unlock-rule: 3*(heartAmount - 4)
	}
	// Here can you edit the used expressions used for calculating the food stats.
	// Expressions are simple mathematical terms with the following variables:
	// 	timesEaten is the number of times the current food 
	// 	hungerValue is the game defined hunger value for the current item
	// 	saturationValue is the saturation modifier defined for the current item
	food: {
		// Sets the amount of eaten foods to keep in the history
		// default: 20
		// constraints:
		// Must be between 0 and null.
		history-length: 20
		// Calculates the food level bonus to earn from eating a food item
		// default: hungerValue * 0.7 ^ timesEaten
		hunger: hungerValue * 0.7 ^ timesEaten
		// Calculates the saturation modifier for a food item
		// default: saturationValue
		saturation: saturationValue
	}
	// Here can you edit the used expressions used for calculating the player stats after respawning.
	// Expressions are simple mathematical terms with the following variables:
	// 	hunger is the amount of hunger the player had when dying
	// 	saturation is the amount of hunger the player had when dying
	respawn: {
		// An expression to calculate the hunger value after a fresh respawn
		// default: max(14, hunger)
		hunger: max(14, hunger)
		// Sets whether the food history should be cleaned at death
		// default: false
		reset-history: false
		// An expression to calculate the saturation value after a fresh respawn
		// default: saturation
		saturation: saturation
	}
}
